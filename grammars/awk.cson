'scopeName': 'source.awk'
'fileTypes': [
  'awk',
  'gawk'
]
'name': 'AWK-Script'
'firstLineMatch': '#!.*\\b(awk|gawk)\\b'
'patterns': [
  {
    'include': '#line_comment'
  }
  {
    'include': '#action'
  }
  {
    'include': '#builtin_functions'
  }
  {
    'include': '#function_definition'
  }
  {
    'include': '#variable_language'
  }
  {
    'include': '#constant_language'
  }
  {
    'include': '#keyword'
  }
  {
    'include': '#operator'
  }
  {
    'include': '#regexp'
  }
  {
    'include': '#string'
  }
  {
    'include': '#numeric'
  }
  {
    'include': '#variable'
  }
  {
    'match': '\\b(&&|\\|\\|)\\b'
    'name': 'keyword.operator.awk'
  }
  {
    'match': "[=|:]"
    'name': 'punctuation.separator'
  }
]
'repository':
  'line_comment':
    'begin': '(^[ \\t]+)?(?=#)'
    'beginCaptures':
      '1':
        'name': 'punctuation.whitespace.comment.leading.awk'
    'end': '(?!\\G)'
    'patterns': [
      {
        'begin': '#'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.awk'
        'end': '\\n'
        'name': 'comment.line.number-sign.awk'
      }
    ]
  'action':
    {
      'name': 'entity.name.action.awk'
      'begin': '^(BEGIN|END|/.+/)\\s*(\{)|^(\{)'
      'beginCaptures':
        '1':
          'name': 'keyword.control.awk'
          'patterns': [
            {
              'include': '#regexp'
            }
          ]
        '2':
          'name': 'entity.name.action.begin.awk'
        '3':
          'name': 'entity.name.action.begin.awk'
      'end': '\}'
      'endCaptures':
        '0':
          'name': 'entity.name.action.end.awk'
      'patterns': [
        {
          'include': '$self'
        }
      ]
  }
  'builtin_functions':
    'patterns': [
      {
        'include': '#debug_output'
      }
      {
        'match': '\\b(atan2|cos|exp|int|log|rand|sin|sqrt|srand|asort|asorti|gensub|gsub|index|length|match|patsplit|split|sprintf|strtonum|sub|substr|tolower|toupper|close|fflush|system|mktime|strftime|systime|and|compl|lshift|or|rshift|xor|isarray|bindtextdomain|dcgettext|dcngettext|print|printf)\\b'
        'name': 'support.function.builtin.awk'
      }
    ]
  'keyword':
    'patterns': [
      {
        'match': '\\b(BEGIN|END|if|for|else|next|in|return|while|do|switch|case|default|break|continue|nextfile|exit)\\b'
        'name': 'keyword.control.awk'
      }
    ]
  'regexp':
    'patterns': [
      {
        'name': 'string.regexp.awk'
        'match': '(/)(.*?)(/)'
        'captures':
          '1':
            'name': 'string.regexp.begin.awk'
          '2':
            'patterns': [
              {
                'include': '#regexp_specialcharacters'
              }
              {
                'include': '#numeric'
              }
              {
                'include': '#character_classes'
              }
              {
                'match': '(\\\\.)'
                'name': 'constant.character.escape.awk'
              }
            ]
          '3':
            'name': 'string.regexp.end.awk'
      }
    ]
  'variable_language':
    'patterns': [
      {
        'match': '\\b(BINMODE|CONVFMT|FIELDWIDTHS|FPAT|FS|IGNORECASE|LINT|OFMT|OFS|ORS|PREC|ROUNDMODE|RS|SUBSEP|TEXTDOMAIN)\\b'
        'name': 'variable.language.awk'
      }
      {
        'match': '\\$[0-9]+'
        'name': 'constant.language.awk'
      }
    ]
  'function_definition':
    'patterns': [
      {
        'begin': '^(function)\\s+([[:alnum:]_]+)\\s*\\(([[:alnum:]_]+)*\\)?'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.awk'
          '2':
            'name': 'entity.name.function.awk'
          '3':
            'name': 'variable.parameter.awk'
        'end': ';|&|$'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.function.awk'
        'name': 'meta.function.awk'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'operator':
    'patterns': [
      {
        'match': '<\\=|>\\=|\\=\\=|<|>|\\!\\='
        'name': 'keyword.operator.comparison.awk'
      }
    ]
  'constant_language':
    'patterns': [
      {
        'match': "\\b(ARGV|ARGC|ENVIRON|ERRNO|FILENAME|FNR|FUNCTAB|NF|NR|PROCINFO|RLENGTH|RSTART|RT|SYMTAB)\\b"
        'name': 'constant.language.awk'
      }
    ]
  'variable':
    'patterns': [
      {
        'name': 'variable.other.awk'
        'match': '[[:alnum:]_]+\\[(.+?)\\]{1,}'
        'captures':
          '1':
            'patterns': [
              {
                'include': '#numeric'
              }
              {
                'include': '#variable_language'
              }
            ]
      }
    ]
  'numeric':
    'patterns': [
      {
        'match': '\\b([[:digit:]]+)(\.[[:digit:]]+)*'
        'name': 'constant.numeric.awk'
      }
    ]
  'string':
    'patterns': [
      {
        'begin': '"'
        'end': '"'
        'name': 'string.quoted.double.awk'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.awk'
          }
        ]
      }
      {
        'begin': '\''
        'end': '\''
        'name': 'string.quoted.single.awk'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.awk'
          }
        ]
      }
    ]
  'regexp_specialcharacters':
    'patterns': [
      {
        'name': 'keyword.other.awk'
        'match': '\\^|\\.|\\+|\\*|\\?|\\$|\\\\[abfnrtv]|\\\\"'
      }
      {
        'name': 'keyword.other.awk'
        'begin': '(\\[|\\{)'
        'beginCaptures':
          '1':
            'name': 'punctuation.keyword.other.begin.awk'
        'end': '(\\]|\\})'
        'endCaptures':
          '1':
            'name': 'punctuation.keyword.other.end.awk'
        'patterns': [
          {
            'include': '#character_classes'
          }
          {
            'include': '#numeric'
          }
        ]
      }
      {
        'name': 'constant.numeric.awk'
        'match': '\\\\[[:digit:]]{1,3}|\\\\x[0-9a-fA-F]{2}'
      }
    ]
  'character_classes':
    'patterns': [
      {
        'match': '\\[:(alnum|alpha|blank|cntrl|digit|graph|lower|print|punct|space|upper|xdigit):\\]'
        'name': 'support.class.awk'
      }
      {
        'match': '(\\\\[BsSwWy<>\'`])'
        'name': 'support.class.other.awk'
      }
    ]
  'debug_output':
    'patterns': [
      {
        'name': 'meta.debug.awk'
        'match': '(printf*)\\s+"(\\[DE*BU*G])(.*?)"(,\\s*)*(".*")*(,\s*)*(.+)*$'
        'captures':
          '1':
            'name': 'support.function.builtin.awk'
          '2':
            'name': 'meta.keyword.other.awk'
          '3':
            'name': 'markup.raw.awk'
          '5':
            'name': 'variable.other.awk'
          '7':
            'name': 'variable.other.awk'
      }
   ]
